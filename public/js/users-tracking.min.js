/*!
  * This is users tracking behavior script
  * Copyright 2025 Modobom
  * Licensed under MIT
  */
!function (e) { "use strict"; const t = [], n = 1e3, o = function () { let e = localStorage.getItem("userUUID"); e || (e = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function (e) { const t = 16 * Math.random() | 0; return ("x" === e ? t : 3 & t | 8).toString(16) })), localStorage.setItem("userUUID", e)); return e }(); var i = 0, a = Date.now(), r = (new Date).getTime(), s = null, c = {}; function l(e) { let t = function () { const e = window.location.hostname; let t = ""; t = "localhost" === e || "127.0.0.1" === e ? "http://127.0.0.1:8000" : "https://apkhype.com"; return t += "/create-users-tracking", t }(); fetch(t, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(e) }).catch((e => console.error("Error:", e))) } function u(e, n) { const i = { eventName: e, eventData: n, timestamp: (new Date).toISOString(), user: { userAgent: navigator.userAgent, platform: navigator.platform, language: navigator.language, cookiesEnabled: navigator.cookieEnabled, screenWidth: window.screen.width, screenHeight: window.screen.height, timezone: Intl.DateTimeFormat().resolvedOptions().timeZone }, domain: window.location.hostname, uuid: o }; t.push(i), function () { const e = Date.now(), t = e - a, n = navigator.userAgent.toLowerCase(), o = [/bot/i, /spider/i, /crawler/i, /slurp/i, /googlebot/i, /bingbot/i, /yandexbot/i, /duckduckbot/i, /baiduspider/i, /facebot/i, /ia_archiver/i]; for (const e of o) if (e.test(n)) return !0; return t < 100 || (a = e, !1) }() || l(i) } function d(e, t) { return function (...n) { s || (s = setTimeout((() => { e(...n), s = null }), t)) } } document.addEventListener("click", d((e => { const t = e.target; let n = { x: e.clientX, y: e.clientY, target: t.tagName, href: "", isInternalLink: !1, isLassoButton: !1, lassoButtonLink: "" }; "A" === t.tagName && t.href.includes(window.location.hostname) ? (n.href = t.href, n.isInternalLink = !0, u("internal_link_click", n)) : "A" === t.tagName && t.classList.contains("lasso-button") ? (n.href = t.href, n.isLassoButton = !0, u("lasso_button_click", n)) : u("click", n) }), n)), document.addEventListener("mousemove", d((e => { const t = e.clientX, n = e.clientY, o = `${t},${n}`; c[o] || (c[o] = 0), c[o]++, u("mousemove", { x: t, y: n, mouseMovements: ++i }) }), n)), document.addEventListener("scroll", d((() => { u("scroll", { scrollTop: window.scrollY, scrollLeft: window.scrollX }) }), n)), document.addEventListener("input", (e => { u("input", { target: e.target.tagName, value: e.target.value }) }), n), document.addEventListener("keydown", d((e => { u("keydown", { target: e.target.tagName, value: e.target.value }) }), n)), window.addEventListener("resize", (function () { u("resize", { width: window.innerWidth, height: window.innerHeight }) }), n), window.addEventListener("beforeunload", (function () { let e = (new Date).getTime(); u("beforeunload", { start: r, end: e, total: e - r, heatmapData: c }) }), n) }();